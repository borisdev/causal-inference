version: '3.7'

# Why did we persist data to the laptop instead of a docker volume?
# Because we do not want to loose the data after we restart docker, which is required periodically
# https://stackoverflow.com/questions/56521547/why-do-i-lose-data-if-docker-restarts
volumes:
  #mongo-data-volume:
  #  external: false
  #postgres-data-volume:
  #  external: false
  rabbitmq-data-volume:
    external: false


services:
  mongo:
    container_name: mongo
    image: gcr.io/sightmachine-178216/mongo:3.6.6
    hostname: mongo
    networks:
      - backend-net
    volumes:
      # - mongo-data-volume:/data/db
      - /opt/sightmachine/dumps:/opt/sightmachine/dumps
      - /opt/sightmachine/data/mongo:/data/db
      # - /opt/sightmachine/ma/local/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    command:
      - "--wiredTigerJournalCompressor=zlib"
      - "--wiredTigerCollectionBlockCompressor=zlib"

  postgres:
    container_name: postgres
    image: gcr.io/sightmachine-178216/postgres:11.5-alpine
    hostname: postgres
    networks:
      - backend-net
    volumes:
      # - postgres-data-volume:/var/lib/postgresql/data
       - /opt/sightmachine/data/postgres:/var/lib/postgresql/data
       - /opt/sightmachine/ma/local/init-tenant-dbs.sh:/docker-entrypoint-initdb.d/init-tenant-dbs.sh
    ports:
      - "5432:5432"
    environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres

  rabbitmq:
    container_name: rabbitmq
    image: gcr.io/sightmachine-178216/rabbitmq:3.6.8-management
    hostname: rabbitmq
    networks:
      - backend-net
    ports:
      - "18080:15672"
      - "5672:5672"
    volumes:
      - rabbitmq-data-volume:/var/lib/rabbitmq

  ma:
    container_name: ma
    hostname: ma
    build:
      context: ..
      dockerfile: ./Dockerfile-dev
    networks:
      - proxynet  # for frontend to connect to out REST API (ma webapp)
      - backend-net # for ma to connect to ETL3....rename this
    tty: true
    stdin_open: true
    working_dir: /opt/sightmachine/ma
    depends_on:
      - mongo
      - rabbitmq
      - postgres
    volumes:
      - /opt/sightmachine/ma:/opt/sightmachine/ma:rw,cached
      - /opt/sightmachine/ma-sd-config/ma:/etc/ma:rw,cached
      - /opt/sightmachine/ma/local:/etc/ma/settings/local
    expose:
      - 8080
      - 8081
    ports:
      - "5022:5022"
      - "8888:8888"
      - "8080:8080"
    environment:
      #- VIRTUAL_HOST=demo.ma-dev  # ????
      - VIRTUAL_PORT=8080
    cap_add:
      - ALL
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    command: sh -ecx "
        py3clean -v /opt/sightmachine/ma/ &&
        pip install -e /opt/sightmachine/ma &&
        tmux new-session -d -s webapp 'ma webapp --debug' &&
        tmux new-session -d -s statistics 'ma statistics --cycledelay 5' &&
        tmux new-session -d -s beat 'ma worker beat' &&
        tmux new-session -d -s importexport 'ma worker importexport' &&
        tmux new-session -d -s interactive 'ma worker interactive' &&
        tmux new-session -d -s background 'ma worker background' &&
        tmux new-session -d -s automigrate-sql 'ma migrate automigrate-sql' &&
        tmux new-session -d -s etl2-master 'ma etl_master' &&
        tmux new-session -d -s etl2-worker-1 'ma etl_worker' &&
        echo 'you should see 9 sessions...' &&
        tmux list-sessions &&
        tail -f /dev/null"

  test-mongo:
    container_name: test-mongo
    image: gcr.io/sightmachine-178216/mongo:3.4.9
    hostname: test-mongo
    networks:
      - backend-net
    volumes:
      # - mongo-data-volume:/data/db
      - /opt/sightmachine/data/test-mongo:/data/db
      # - /opt/sightmachine/ma/local/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    command:
      - --wiredTigerJournalCompressor=zlib
      - --wiredTigerCollectionBlockCompressor=zlib

  test-postgres:
    container_name: test-postgres
    image: gcr.io/sightmachine-178216/postgres:11.1-alpine
    hostname: test-postgres
    networks:
      - backend-net
    tmpfs:
      - /var/lib/postgresql/data
    volumes:
      - /opt/sightmachine/ma/local/init-test-tenant-db.sh:/docker-entrypoint-initdb.d/init-test-tenant-db.sh
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    #ports:
    #  - "5432:5432"

networks:
  proxynet:
    name: frontend-backend
  backend-net:
    driver: bridge
